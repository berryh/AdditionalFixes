buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://repo.spongepowered.org/maven' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}

plugins {
	id 'eclipse'
	id 'maven-publish'
	id 'idea'
	id "com.matthewprenger.cursegradle" version "1.4.0"
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '0.0.2'
group = 'net.berryh'
archivesBaseName = 'AdditionalFixes'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
	mappings channel: 'official', version: '1.18.2'

	runs {
		client {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'AdditionalFixes'

			mods {
				AdditionalFixes {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'AdditionalFixes'

			mods {
				AdditionalFixes {
					source sourceSets.main
				}
			}
		}

		gameTestServer {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'AdditionalFixes'

			mods {
				AdditionalFixes {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			args '--mod', 'AdditionalFixes', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				AdditionalFixes {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		name 'modmaven'
		url "https://modmaven.dev/"
	}
	maven {
		url "https://maven.k-4u.nl/"
		content {
			includeGroup "mcjty"
		}
	}
	maven {
		url = 'https://repo.spongepowered.org/maven'
	}
	maven {
		url "https://maven.parchmentmc.net/"
		content {
			includeGroup "org.parchmentmc.data"
		}
	}
}

dependencies {
	minecraft 'net.minecraftforge:forge:1.18.2-40.1.60'

	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

	implementation fg.deobf('curse.maven:ftb-ultimine-386134:3993576')
	implementation fg.deobf('curse.maven:ae2-223794:4008959')
	implementation fg.deobf('curse.maven:deep-resonance-233398:4008047')

	runtimeOnly fg.deobf('curse.maven:ftb-library-404465:4060220')
	runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.1.255")
	runtimeOnly fg.deobf("curse.maven:architectury-419699:4040966")
	runtimeOnly fg.deobf("curse.maven:rftools-base-326041:3970754")
	runtimeOnly fg.deobf("curse.maven:mcjty-lib-233105:3994822")

	runtimeOnly fg.deobf("curse.maven:mekanism-268560:3875976")
	runtimeOnly fg.deobf("curse.maven:mekanism-generators-268566:3875978")
	runtimeOnly fg.deobf("curse.maven:mekanism-tools-268567:3875979")
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : "AdditionalFixes",
				"Specification-Vendor"    : "Berryh",
				"Specification-Version"   : "1", // We are version 1 of ourselves
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.jar.archiveVersion,
				"Implementation-Vendor"   : "Berryh",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}
jar.finalizedBy('reobfJar')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact jar
		}
	}
	repositories {
		maven {
			url "file://${project.projectDir}/mcmodsrepo"
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

mixin {
	add sourceSets.main, "additionalfixes.refmap.json"
	config "additionalfixes.mixins.json"
}